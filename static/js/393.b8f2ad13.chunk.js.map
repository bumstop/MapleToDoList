{"version":3,"file":"static/js/393.b8f2ad13.chunk.js","mappings":"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","sources":["components/ToDoSymbol.tsx","data/symbol.ts"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { symbol } from \"../data/symbol\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { ContentsNothing } from \"./ContentsNothing\";\r\nimport {\r\n  TaskInterface,\r\n  ToDoCategoryType,\r\n  toggleIsClearState,\r\n} from \"../redux/characterListSlice\";\r\nimport { checkIcon } from \"../assets/images\";\r\n\r\nexport function ToDoSymbol() {\r\n  const characterList = useSelector((state: RootState) => state.characterList);\r\n  const listedCharacterName = Object.keys(characterList);\r\n  // 어떤 캐릭터의 리스트가 열려있는지, (characterList의 객체중 isToDoOpened 속성이 true인 객체)\r\n  const listOpenedCharacter = listedCharacterName.find((key) => characterList[key].isToDoOpened);\r\n  let toDoSymbolDailyAcane: { [key: string]: TaskInterface } = {};\r\n  let toDoSymbolDailyGrandis: { [key: string]: TaskInterface } = {};\r\n  let toDoSymbolWeeklyAcane: { [key: string]: TaskInterface } = {};\r\n  let listedToDoSymbolDailyAcane: string[] = [];\r\n  let listedToDoSymbolDailyGrandis: string[] = [];\r\n  let listedToDoSymbolWeeklyAcane: string[] = [];\r\n\r\n  if (listOpenedCharacter) {\r\n    toDoSymbolDailyAcane = characterList[listOpenedCharacter].toDoList.symbol.daily.acane;\r\n    toDoSymbolDailyGrandis = characterList[listOpenedCharacter].toDoList.symbol.daily.grandis;\r\n    toDoSymbolWeeklyAcane = characterList[listOpenedCharacter].toDoList.symbol.weekly.acane;\r\n\r\n    listedToDoSymbolDailyAcane = Object.keys(toDoSymbolDailyAcane).filter(\r\n      (key) => toDoSymbolDailyAcane[key].isListed\r\n    );\r\n\r\n    listedToDoSymbolDailyGrandis = Object.keys(toDoSymbolDailyGrandis).filter(\r\n      (key) => toDoSymbolDailyGrandis[key].isListed\r\n    );\r\n\r\n    listedToDoSymbolWeeklyAcane = Object.keys(toDoSymbolWeeklyAcane).filter(\r\n      (key) => toDoSymbolWeeklyAcane[key].isListed\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ToDoSymbolDiv>\r\n      {/* 일간 */}\r\n      <div className=\"daily\">\r\n        {/* 아케인 일일퀘스트 */}\r\n        <div className=\"daily-acane\">\r\n          <div className=\"cate-head\">아케인 일일퀘스트</div>\r\n          {listedToDoSymbolDailyAcane.length > 0 ? (\r\n            <ContentsSection\r\n              data={symbol.daily.acane}\r\n              calledBy=\"daily-acane\"\r\n              toDos={toDoSymbolDailyAcane}\r\n            />\r\n          ) : (\r\n            <ContentsNothing calledBy=\"ToDos\" />\r\n          )}\r\n        </div>\r\n\r\n        {/* 그란디스 일일퀘스트 */}\r\n        <div className=\"daily-grandis\">\r\n          <div className=\"cate-head\">그란디스 일일퀘스트</div>\r\n          {listedToDoSymbolDailyGrandis.length > 0 ? (\r\n            <ContentsSection\r\n              data={symbol.daily.grandis}\r\n              calledBy=\"daily-grandis\"\r\n              toDos={toDoSymbolDailyGrandis}\r\n            />\r\n          ) : (\r\n            <ContentsNothing calledBy=\"ToDos\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 주간 */}\r\n      <div className=\"weekly\">\r\n        {/* 아케인 주간퀘스트 */}\r\n        <div className=\"weekly-acane\">\r\n          <div className=\"cate-head\">아케인 주간컨텐츠</div>\r\n          {listedToDoSymbolWeeklyAcane.length > 0 ? (\r\n            <ContentsSection\r\n              data={symbol.weekly.acane}\r\n              calledBy=\"weekly-acane\"\r\n              toDos={toDoSymbolWeeklyAcane}\r\n            />\r\n          ) : (\r\n            <ContentsNothing calledBy=\"ToDos\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </ToDoSymbolDiv>\r\n  );\r\n}\r\n\r\nconst ToDoSymbolDiv = styled.div`\r\n  padding: 10px;\r\n\r\n  & {\r\n    .cate-head {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface DataType {\r\n  data: { text: string; image: string }[];\r\n  calledBy: ToDoCategoryType;\r\n  toDos: { [key: string]: TaskInterface };\r\n}\r\n\r\nfunction ContentsSection({ data, calledBy, toDos }: DataType) {\r\n  const dispatch = useDispatch();\r\n  const listedToDos = Object.keys(toDos).filter((key) => toDos[key].isListed);\r\n  const clearedToDos = Object.keys(toDos).filter((key) => toDos[key].isClear);\r\n\r\n  return (\r\n    <ContentsSectionDiv>\r\n      {data.map((v) => {\r\n        if (listedToDos.includes(v.text)) {\r\n          const isClear = clearedToDos.includes(v.text) ? true : false;\r\n\r\n          return (\r\n            <ContentsBoxDiv\r\n              key={v.text}\r\n              onClick={() => dispatch(toggleIsClearState([v.text, calledBy]))}\r\n              $isClear={isClear}\r\n            >\r\n              <div className=\"img\">\r\n                <img src={v.image} />\r\n              </div>\r\n              <div className=\"text\">{v.text}</div>\r\n            </ContentsBoxDiv>\r\n          );\r\n        }\r\n      })}\r\n    </ContentsSectionDiv>\r\n  );\r\n}\r\n\r\nconst ContentsSectionDiv = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n  margin: 20px 0 40px;\r\n`;\r\n\r\nconst ContentsBoxDiv = styled.div<{ $isClear: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-basis: calc((100% / 3) - (5px * 2 / 3));\r\n  // 100% / (아이템갯수) - (gap * gap갯수 / 아이템갯수)\r\n  position: relative;\r\n  padding: 5px;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 0.5rem;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border: 1px solid #ff890a;\r\n    color: #ff890a;\r\n  }\r\n\r\n  .img {\r\n    position: relative;\r\n    width: 44px;\r\n    height: 44px;\r\n  }\r\n  img {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    height: 90%;\r\n\r\n  }\r\n  .text {\r\n    flex-grow: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  ${({ $isClear }) =>\r\n    $isClear &&\r\n    css`\r\n      color: #ddd;\r\n\r\n      .img::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: no-repeat center/90% url(${checkIcon});\r\n        backdrop-filter: grayscale(100%);\r\n      }\r\n    `}\r\n`;\r\n","import {\r\n  acaneSymbol1,\r\n  acaneSymbol2,\r\n  acaneSymbol3,\r\n  acaneSymbol4,\r\n  acaneSymbol5,\r\n  acaneSymbol6,\r\n  asenticSymbol1,\r\n  asenticSymbol2,\r\n  asenticSymbol3,\r\n  asenticSymbol4,\r\n  asenticSymbol5,\r\n  asenticSymbol6,\r\n  dreamBreaker,\r\n  enheimDefense,\r\n  erdaSpectrum,\r\n  hungryMuto,\r\n  protectEsfera,\r\n  spiritSavior,\r\n} from \"../assets/images\";\r\n\r\nexport const symbol = {\r\n  daily: {\r\n    acane: [\r\n      {\r\n        text: \"소멸의 여로\",\r\n        image: acaneSymbol1,\r\n      },\r\n      {\r\n        text: \"츄츄 아일랜드\",\r\n        image: acaneSymbol2,\r\n      },\r\n      {\r\n        text: \"레헬른\",\r\n        image: acaneSymbol3,\r\n      },\r\n      {\r\n        text: \"아르카나\",\r\n        image: acaneSymbol4,\r\n      },\r\n      {\r\n        text: \"모라스\",\r\n        image: acaneSymbol5,\r\n      },\r\n      {\r\n        text: \"에스페라\",\r\n        image: acaneSymbol6,\r\n      },\r\n    ],\r\n    grandis: [\r\n      {\r\n        text: \"세르니움\",\r\n        image: asenticSymbol1,\r\n      },\r\n      {\r\n        text: \"아르크스\",\r\n        image: asenticSymbol2,\r\n      },\r\n      {\r\n        text: \"오디움\",\r\n        image: asenticSymbol3,\r\n      },\r\n      {\r\n        text: \"도원경\",\r\n        image: asenticSymbol4,\r\n      },\r\n      {\r\n        text: \"아르테리아\",\r\n        image: asenticSymbol5,\r\n      },\r\n      {\r\n        text: \"카르시온\",\r\n        image: asenticSymbol6,\r\n      },\r\n    ],\r\n  },\r\n  weekly: {\r\n    acane: [\r\n      {\r\n        text: \"에르다 스펙트럼\",\r\n        image: erdaSpectrum,\r\n      },\r\n      {\r\n        text: \"배고픈 무토\",\r\n        image: hungryMuto,\r\n      },\r\n      {\r\n        text: \"미드나잇 체이서\",\r\n        image: dreamBreaker,\r\n      },\r\n      {\r\n        text: \"스피릿 세이비어\",\r\n        image: spiritSavior,\r\n      },\r\n      {\r\n        text: \"엔하임 디펜스\",\r\n        image: enheimDefense,\r\n      },\r\n      {\r\n        text: \"프로텍트 에스페라\",\r\n        image: protectEsfera,\r\n      },\r\n    ],\r\n  },\r\n};\r\n"],"names":["ToDoSymbol","characterList","useSelector","state","listOpenedCharacter","Object","keys","find","key","isToDoOpened","toDoSymbolDailyAcane","toDoSymbolDailyGrandis","toDoSymbolWeeklyAcane","listedToDoSymbolDailyAcane","listedToDoSymbolDailyGrandis","listedToDoSymbolWeeklyAcane","toDoList","symbol","daily","acane","grandis","weekly","filter","isListed","_jsxs","ToDoSymbolDiv","children","className","_jsx","length","ContentsSection","data","calledBy","toDos","ContentsNothing","styled","div","_templateObject","_taggedTemplateLiteral","_ref","dispatch","useDispatch","listedToDos","clearedToDos","isClear","ContentsSectionDiv","map","v","includes","text","ContentsBoxDiv","onClick","toggleIsClearState","$isClear","src","image","_templateObject2","_templateObject3","_ref2","css","_templateObject4","checkIcon","acaneSymbol1","acaneSymbol2","acaneSymbol3","acaneSymbol4","acaneSymbol5","acaneSymbol6","asenticSymbol1","asenticSymbol2","asenticSymbol3","asenticSymbol4","asenticSymbol5","asenticSymbol6","erdaSpectrum","hungryMuto","dreamBreaker","spiritSavior","enheimDefense","protectEsfera"],"sourceRoot":""}