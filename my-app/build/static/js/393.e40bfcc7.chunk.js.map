{"version":3,"file":"static/js/393.e40bfcc7.chunk.js","mappings":"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","sources":["components/AllChecker.tsx","components/ToDoSymbol.tsx","data/symbol.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DataType } from \"./ToDoSymbol\";\r\nimport { toggleIsClearState } from \"../redux/characterListSlice\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { checkIcon } from \"../assets/images\";\r\n\r\nexport function AllChecker({ toDos, calledBy }: Omit<DataType, \"data\">) {\r\n  const dispatch = useDispatch();\r\n  const listedToDos = Object.keys(toDos).filter((key) => toDos[key].isListed);\r\n  const clearedToDos = Object.keys(toDos).filter((key) => toDos[key].isClear);\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n\r\n  const AllCheckToggle = () => {\r\n    if (!isChecked) {\r\n      listedToDos.map((todo) => {\r\n        !clearedToDos.includes(todo) && dispatch(toggleIsClearState([todo, calledBy]));\r\n      });\r\n      setIsChecked(true);\r\n    }\r\n    if (isChecked) {\r\n      listedToDos.map((todo) => {\r\n        dispatch(toggleIsClearState([todo, calledBy]));\r\n      });\r\n      setIsChecked(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listedToDos.length === clearedToDos.length) {\r\n      setIsChecked(true);\r\n    }\r\n    if (listedToDos.length !== clearedToDos.length) {\r\n      setIsChecked(false);\r\n    }\r\n  }, [listedToDos, clearedToDos]);\r\n\r\n  return (\r\n    <AllCheckerDiv onClick={AllCheckToggle} $isChecked={isChecked}>\r\n      <span>전체완료</span>\r\n      <div className=\"check-box\" />\r\n    </AllCheckerDiv>\r\n  );\r\n}\r\n\r\nconst AllCheckerDiv = styled.div<{ $isChecked: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  cursor: pointer;\r\n\r\n  .check-box {\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 3px;\r\n    ${({ $isChecked }) => css`\r\n      background: ${$isChecked ? `no-repeat center/cover url(${checkIcon})` : \"none\"};\r\n    `};\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { symbol } from \"../data/symbol\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { ContentsNothing } from \"./ContentsNothing\";\r\nimport { TaskInterface, ToDoCategoryType, toggleIsClearState } from \"../redux/characterListSlice\";\r\nimport { checkIcon } from \"../assets/images\";\r\nimport { AllChecker } from \"./AllChecker\";\r\n\r\nexport function ToDoSymbol() {\r\n  const characterList = useSelector((state: RootState) => state.characterList);\r\n  const listedCharacterName = Object.keys(characterList);\r\n  // 어떤 캐릭터의 리스트가 열려있는지, (characterList의 객체중 isToDoOpened 속성이 true인 객체)\r\n  const listOpenedCharacter = listedCharacterName.find((key) => characterList[key].isToDoOpened);\r\n  let toDoSymbolDailyAcane: { [key: string]: TaskInterface } = {};\r\n  let toDoSymbolDailyGrandis: { [key: string]: TaskInterface } = {};\r\n  let toDoSymbolWeeklyAcane: { [key: string]: TaskInterface } = {};\r\n  let listedToDoSymbolDailyAcane: string[] = [];\r\n  let listedToDoSymbolDailyGrandis: string[] = [];\r\n  let listedToDoSymbolWeeklyAcane: string[] = [];\r\n\r\n  if (listOpenedCharacter) {\r\n    toDoSymbolDailyAcane = characterList[listOpenedCharacter].toDoList.symbol.daily.acane;\r\n    toDoSymbolDailyGrandis = characterList[listOpenedCharacter].toDoList.symbol.daily.grandis;\r\n    toDoSymbolWeeklyAcane = characterList[listOpenedCharacter].toDoList.symbol.weekly.acane;\r\n\r\n    listedToDoSymbolDailyAcane = Object.keys(toDoSymbolDailyAcane).filter(\r\n      (key) => toDoSymbolDailyAcane[key].isListed\r\n    );\r\n\r\n    listedToDoSymbolDailyGrandis = Object.keys(toDoSymbolDailyGrandis).filter(\r\n      (key) => toDoSymbolDailyGrandis[key].isListed\r\n    );\r\n\r\n    listedToDoSymbolWeeklyAcane = Object.keys(toDoSymbolWeeklyAcane).filter(\r\n      (key) => toDoSymbolWeeklyAcane[key].isListed\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ToDoSymbolDiv>\r\n      {/* 일간 */}\r\n      <div className=\"daily\">\r\n        {/* 아케인 일일퀘스트 */}\r\n        <div className=\"daily-acane\">\r\n          <div className=\"cate-head\">\r\n            <div className=\"cate-title\">아케인 일일퀘스트</div>\r\n            <AllChecker toDos={toDoSymbolDailyAcane} calledBy=\"daily-acane\" />\r\n          </div>\r\n          {listedToDoSymbolDailyAcane.length > 0 ? (\r\n            <ContentsSection\r\n              data={symbol.daily.acane}\r\n              calledBy=\"daily-acane\"\r\n              toDos={toDoSymbolDailyAcane}\r\n            />\r\n          ) : (\r\n            <ContentsNothing calledBy=\"ToDos\" />\r\n          )}\r\n        </div>\r\n\r\n        {/* 그란디스 일일퀘스트 */}\r\n        <div className=\"daily-grandis\">\r\n          <div className=\"cate-head\">\r\n            <div className=\"cate-title\">그란디스 일일퀘스트</div>\r\n            <AllChecker toDos={toDoSymbolDailyGrandis} calledBy=\"daily-grandis\" />\r\n          </div>\r\n          {listedToDoSymbolDailyGrandis.length > 0 ? (\r\n            <ContentsSection\r\n              data={symbol.daily.grandis}\r\n              calledBy=\"daily-grandis\"\r\n              toDos={toDoSymbolDailyGrandis}\r\n            />\r\n          ) : (\r\n            <ContentsNothing calledBy=\"ToDos\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 주간 */}\r\n      <div className=\"weekly\">\r\n        {/* 아케인 주간퀘스트 */}\r\n        <div className=\"weekly-acane\">\r\n          <div className=\"cate-head\">\r\n            <div className=\"cate-title\">아케인 주간컨텐츠</div>\r\n            <AllChecker toDos={toDoSymbolWeeklyAcane} calledBy=\"weekly-acane\" />\r\n          </div>\r\n          {listedToDoSymbolWeeklyAcane.length > 0 ? (\r\n            <ContentsSection\r\n              data={symbol.weekly.acane}\r\n              calledBy=\"weekly-acane\"\r\n              toDos={toDoSymbolWeeklyAcane}\r\n            />\r\n          ) : (\r\n            <ContentsNothing calledBy=\"ToDos\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </ToDoSymbolDiv>\r\n  );\r\n}\r\n\r\nconst ToDoSymbolDiv = styled.div`\r\n  padding: 10px;\r\n\r\n  & {\r\n    .cate-head {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DataType {\r\n  data: { text: string; image: string }[];\r\n  calledBy: ToDoCategoryType;\r\n  toDos: { [key: string]: TaskInterface };\r\n}\r\n\r\nfunction ContentsSection({ data, calledBy, toDos }: DataType) {\r\n  const dispatch = useDispatch();\r\n  const listedToDos = Object.keys(toDos).filter((key) => toDos[key].isListed);\r\n  const clearedToDos = Object.keys(toDos).filter((key) => toDos[key].isClear);\r\n\r\n  return (\r\n    <ContentsSectionDiv>\r\n      {data.map((v) => {\r\n        if (listedToDos.includes(v.text)) {\r\n          const isClear = clearedToDos.includes(v.text) ? true : false;\r\n\r\n          return (\r\n            <ContentsBoxDiv\r\n              key={v.text}\r\n              onClick={() => dispatch(toggleIsClearState([v.text, calledBy]))}\r\n              $isClear={isClear}\r\n            >\r\n              <div className=\"img\">\r\n                <img src={v.image} />\r\n              </div>\r\n              <div className=\"text\">{v.text}</div>\r\n            </ContentsBoxDiv>\r\n          );\r\n        }\r\n      })}\r\n    </ContentsSectionDiv>\r\n  );\r\n}\r\n\r\nconst ContentsSectionDiv = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n  margin: 20px 0 40px;\r\n`;\r\n\r\nconst ContentsBoxDiv = styled.div<{ $isClear: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-basis: calc((100% / 3) - (5px * 2 / 3));\r\n  // 100% / (아이템갯수) - (gap * gap갯수 / 아이템갯수)\r\n  position: relative;\r\n  padding: 5px;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 0.5rem;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border: 1px solid #ff890a;\r\n    color: #ff890a;\r\n  }\r\n\r\n  .img {\r\n    position: relative;\r\n    width: 44px;\r\n    height: 44px;\r\n  }\r\n  img {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    height: 90%;\r\n  }\r\n  .text {\r\n    flex-grow: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  ${({ $isClear }) =>\r\n    $isClear &&\r\n    css`\r\n      color: #ddd;\r\n\r\n      .img::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: no-repeat center/90% url(${checkIcon});\r\n        backdrop-filter: grayscale(100%);\r\n      }\r\n    `}\r\n`;\r\n","import {\r\n  acaneSymbol1,\r\n  acaneSymbol2,\r\n  acaneSymbol3,\r\n  acaneSymbol4,\r\n  acaneSymbol5,\r\n  acaneSymbol6,\r\n  asenticSymbol1,\r\n  asenticSymbol2,\r\n  asenticSymbol3,\r\n  asenticSymbol4,\r\n  asenticSymbol5,\r\n  asenticSymbol6,\r\n  dreamBreaker,\r\n  enheimDefense,\r\n  erdaSpectrum,\r\n  hungryMuto,\r\n  protectEsfera,\r\n  spiritSavior,\r\n} from \"../assets/images\";\r\n\r\nexport const symbol = {\r\n  daily: {\r\n    acane: [\r\n      {\r\n        text: \"소멸의 여로\",\r\n        image: acaneSymbol1,\r\n      },\r\n      {\r\n        text: \"츄츄 아일랜드\",\r\n        image: acaneSymbol2,\r\n      },\r\n      {\r\n        text: \"레헬른\",\r\n        image: acaneSymbol3,\r\n      },\r\n      {\r\n        text: \"아르카나\",\r\n        image: acaneSymbol4,\r\n      },\r\n      {\r\n        text: \"모라스\",\r\n        image: acaneSymbol5,\r\n      },\r\n      {\r\n        text: \"에스페라\",\r\n        image: acaneSymbol6,\r\n      },\r\n    ],\r\n    grandis: [\r\n      {\r\n        text: \"세르니움\",\r\n        image: asenticSymbol1,\r\n      },\r\n      {\r\n        text: \"아르크스\",\r\n        image: asenticSymbol2,\r\n      },\r\n      {\r\n        text: \"오디움\",\r\n        image: asenticSymbol3,\r\n      },\r\n      {\r\n        text: \"도원경\",\r\n        image: asenticSymbol4,\r\n      },\r\n      {\r\n        text: \"아르테리아\",\r\n        image: asenticSymbol5,\r\n      },\r\n      {\r\n        text: \"카르시온\",\r\n        image: asenticSymbol6,\r\n      },\r\n    ],\r\n  },\r\n  weekly: {\r\n    acane: [\r\n      {\r\n        text: \"에르다 스펙트럼\",\r\n        image: erdaSpectrum,\r\n      },\r\n      {\r\n        text: \"배고픈 무토\",\r\n        image: hungryMuto,\r\n      },\r\n      {\r\n        text: \"미드나잇 체이서\",\r\n        image: dreamBreaker,\r\n      },\r\n      {\r\n        text: \"스피릿 세이비어\",\r\n        image: spiritSavior,\r\n      },\r\n      {\r\n        text: \"엔하임 디펜스\",\r\n        image: enheimDefense,\r\n      },\r\n      {\r\n        text: \"프로텍트 에스페라\",\r\n        image: protectEsfera,\r\n      },\r\n    ],\r\n  },\r\n};\r\n"],"names":["AllChecker","_ref","toDos","calledBy","dispatch","useDispatch","listedToDos","Object","keys","filter","key","isListed","clearedToDos","isClear","isChecked","setIsChecked","useState","useEffect","length","_jsxs","AllCheckerDiv","onClick","AllCheckToggle","map","todo","includes","toggleIsClearState","$isChecked","children","_jsx","className","styled","div","_templateObject","_taggedTemplateLiteral","_ref2","css","_templateObject2","concat","checkIcon","ToDoSymbol","characterList","useSelector","state","listOpenedCharacter","find","isToDoOpened","toDoSymbolDailyAcane","toDoSymbolDailyGrandis","toDoSymbolWeeklyAcane","listedToDoSymbolDailyAcane","listedToDoSymbolDailyGrandis","listedToDoSymbolWeeklyAcane","toDoList","symbol","daily","acane","grandis","weekly","ToDoSymbolDiv","ContentsSection","data","ContentsNothing","ContentsSectionDiv","v","text","ContentsBoxDiv","$isClear","src","image","_templateObject3","_templateObject4","acaneSymbol1","acaneSymbol2","acaneSymbol3","acaneSymbol4","acaneSymbol5","acaneSymbol6","asenticSymbol1","asenticSymbol2","asenticSymbol3","asenticSymbol4","asenticSymbol5","asenticSymbol6","erdaSpectrum","hungryMuto","dreamBreaker","spiritSavior","enheimDefense","protectEsfera"],"sourceRoot":""}